{"version":3,"sources":["components/Temp.jsx","components/Prec.jsx","App.js","serviceWorker.js","index.js"],"names":["Temp","props","state","fetchedData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","years","startYear","endYear","a","n","balanced","size","len","length","out","i","Math","floor","push","slice","ceil","arr","lastArr","sum","v","yearsArr","forEach","element","t","match","filter","item","index","indexOf","fetch","response","json","result","this","setState","chunkedArr","chunkify","console","log","labelsCopy","dataCopy","map","getAverageValue","getYears","e","target","value","getData","prevProps","prevState","alert","className","name","id","onChange","setStart","year","key","setEnd","reverse","options","title","display","text","fontSize","legend","position","Component","Prec","App","displayTemperature","displayPrecipitation","onClick","displayTemp","displayPrec","React","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2df149a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Spin } from 'antd';\n\nimport './Temp.css';\n\nexport default class Temp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchedData: null,\n      labels: [],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [],\n        },\n      ],\n      years: null,\n      startYear: '1881',\n      endYear: '2006',\n    };\n  }\n\n  chunkify(a, n, balanced) {\n    if (n < 2) return [a];\n\n    var len = a.length,\n      out = [],\n      i = 0,\n      size;\n\n    if (len % n === 0) {\n      size = Math.floor(len / n);\n      while (i < len) {\n        out.push(a.slice(i, (i += size)));\n      }\n    } else if (balanced) {\n      while (i < len) {\n        size = Math.ceil((len - i) / n--);\n        out.push(a.slice(i, (i += size)));\n      }\n    } else {\n      n--;\n      size = Math.floor(len / n);\n      if (len % size === 0) size--;\n      while (i < size * n) {\n        out.push(a.slice(i, (i += size)));\n      }\n      out.push(a.slice(size * n));\n    }\n\n    return out;\n  }\n\n  lastValue(arr) {\n    let lastArr = arr[arr.length - 1];\n    return lastArr[lastArr.length - 1];\n  }\n\n  getAverageValue(arr) {\n    let sum = 0;\n    for (let i in arr) {\n      sum += arr[i].v;\n    }\n\n    let numbersCnt = arr.length;\n\n    return sum / numbersCnt;\n  }\n\n  getYears(arr) {\n    let yearsArr = [];\n    arr.forEach((element) => {\n      yearsArr.push(element.t.match(/^\\d{4}/)[0]);\n    });\n    return yearsArr.filter((item, index) => yearsArr.indexOf(item) === index);\n  }\n\n  async getData() {\n    let host_url = 'http://localhost:5000/temp';\n    let response = await fetch(host_url);\n    let result = await response.json();\n\n    this.setState({\n      fetchedData: result.filter((element) => {\n        return (\n          element.t.match(/^\\d{4}/)[0] >= this.state.startYear &&\n          element.t.match(/^\\d{4}/)[0] <= this.state.endYear\n        );\n      }),\n    });\n\n    const chunkedArr = this.chunkify(this.state.fetchedData, 10, true);\n\n    console.log(chunkedArr);\n\n    const labelsCopy = this.state.labels;\n    const dataCopy = this.state.datasets;\n\n    chunkedArr.map((item) => {\n      labelsCopy.push(\n        `${item[0].t.match(/^\\d{4}/)} - ${item[item.length - 1].t.match(\n          /^\\d{4}/,\n        )}`,\n      );\n      dataCopy[0].data.push(this.getAverageValue(item));\n    });\n\n    this.setState({\n      labels: labelsCopy,\n      datasets: dataCopy,\n      years: this.getYears(this.state.fetchedData),\n    });\n  }\n\n  setStart(e) {\n    this.setState({\n      startYear: e.target.value,\n    });\n  }\n\n  setEnd(e) {\n    this.setState({\n      endYear: e.target.value,\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.startYear !== this.state.startYear &&\n        this.state.endYear > this.state.startYear) ||\n      (prevState.endYear !== this.state.endYear &&\n        this.state.endYear > this.state.startYear)\n    ) {\n      console.log('state has changed.');\n\n      this.setState({\n        fetchedData: this.state.fetchedData.filter((element) => {\n          return (\n            element.t.match(/^\\d{4}/)[0] >= this.state.startYear &&\n            element.t.match(/^\\d{4}/)[0] <= this.state.endYear\n          );\n        }),\n      });\n\n      const chunkedArr = this.chunkify(this.state.fetchedData, 10, true);\n\n      console.log(chunkedArr);\n\n      const labelsCopy = [];\n      const dataCopy = this.state.datasets;\n      dataCopy[0].data = [];\n\n      chunkedArr.map((item) => {\n        labelsCopy.push(\n          `${item[0].t.match(/^\\d{4}/)} - ${item[item.length - 1].t.match(\n            /^\\d{4}/,\n          )}`,\n        );\n        dataCopy[0].data.push(this.getAverageValue(item));\n      });\n\n      this.setState({\n        labels: labelsCopy,\n        datasets: dataCopy,\n      });\n    } else if (\n      this.state.startYear > this.state.endYear ||\n      this.state.startYear == this.state.endYear\n    ) {\n      alert('fix values');\n    }\n  }\n\n  render() {\n    if (this.state.years === null) {\n      return (\n        <div className=\"spinner\">\n          <Spin size=\"large\" />\n        </div>\n      );\n    } else\n      return (\n        <div>\n          <select\n            name=\"\"\n            id=\"start-year-temp\"\n            onChange={(value) => {\n              this.setStart(value);\n            }}\n            value={this.value}\n          >\n            {this.state.years.map((year, index) => {\n              return (\n                <option key={`year${index}`} value={year}>\n                  {year}\n                </option>\n              );\n            })}\n          </select>\n          <select\n            name=\"\"\n            id=\"end-year-temp\"\n            onChange={(value) => {\n              this.setEnd(value);\n            }}\n            value={this.value}\n          >\n            {this.state.years.reverse().map((year, index) => {\n              return (\n                <option key={`year${index}`} value={year}>\n                  {year}\n                </option>\n              );\n            })}\n          </select>\n          <Line\n            data={this.state}\n            options={{\n              title: {\n                display: true,\n                text: 'Average Temperature',\n                fontSize: 20,\n              },\n              legend: {\n                display: true,\n                position: 'right',\n              },\n            }}\n          />\n        </div>\n      );\n  }\n}\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { Spin } from 'antd';\n\nexport default class Prec extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchedData: null,\n      labels: [],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [],\n        },\n      ],\n      years: null,\n      startYear: '1881',\n      endYear: '2006',\n    };\n  }\n\n  chunkify(a, n, balanced) {\n    if (n < 2) return [a];\n\n    var len = a.length,\n      out = [],\n      i = 0,\n      size;\n\n    if (len % n === 0) {\n      size = Math.floor(len / n);\n      while (i < len) {\n        out.push(a.slice(i, (i += size)));\n      }\n    } else if (balanced) {\n      while (i < len) {\n        size = Math.ceil((len - i) / n--);\n        out.push(a.slice(i, (i += size)));\n      }\n    } else {\n      n--;\n      size = Math.floor(len / n);\n      if (len % size === 0) size--;\n      while (i < size * n) {\n        out.push(a.slice(i, (i += size)));\n      }\n      out.push(a.slice(size * n));\n    }\n\n    return out;\n  }\n\n  lastValue(arr) {\n    let lastArr = arr[arr.length - 1];\n    return lastArr[lastArr.length - 1];\n  }\n\n  getAverageValue(arr) {\n    let sum = 0;\n    for (let i in arr) {\n      sum += arr[i].v;\n    }\n\n    let numbersCnt = arr.length;\n\n    return sum / numbersCnt;\n  }\n\n  getYears(arr) {\n    let yearsArr = [];\n    arr.forEach((element) => {\n      yearsArr.push(element.t.match(/^\\d{4}/)[0]);\n    });\n    return yearsArr.filter((item, index) => yearsArr.indexOf(item) === index);\n  }\n\n  async getData() {\n    let host_url = 'http://localhost:5000/prec';\n    let response = await fetch(host_url);\n    let result = await response.json();\n\n    this.setState({\n      fetchedData: result.filter((element) => {\n        return (\n          element.t.match(/^\\d{4}/)[0] >= this.state.startYear &&\n          element.t.match(/^\\d{4}/)[0] <= this.state.endYear\n        );\n      }),\n    });\n\n    const chunkedArr = this.chunkify(this.state.fetchedData, 10, true);\n\n    console.log(chunkedArr);\n\n    const labelsCopy = this.state.labels;\n    const dataCopy = this.state.datasets;\n\n    chunkedArr.map((item) => {\n      labelsCopy.push(\n        `${item[0].t.match(/^\\d{4}/)} - ${item[item.length - 1].t.match(\n          /^\\d{4}/,\n        )}`,\n      );\n      dataCopy[0].data.push(this.getAverageValue(item));\n    });\n\n    this.setState({\n      labels: labelsCopy,\n      datasets: dataCopy,\n      years: this.getYears(this.state.fetchedData),\n    });\n  }\n\n  setStart(e) {\n    this.setState({\n      startYear: e.target.value,\n    });\n  }\n\n  setEnd(e) {\n    this.setState({\n      endYear: e.target.value,\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.startYear !== this.state.startYear &&\n        this.state.endYear > this.state.startYear) ||\n      (prevState.endYear !== this.state.endYear &&\n        this.state.endYear > this.state.startYear)\n    ) {\n      console.log('state has changed.');\n\n      this.setState({\n        fetchedData: this.state.fetchedData.filter((element) => {\n          return (\n            element.t.match(/^\\d{4}/)[0] >= this.state.startYear &&\n            element.t.match(/^\\d{4}/)[0] <= this.state.endYear\n          );\n        }),\n      });\n\n      const chunkedArr = this.chunkify(this.state.fetchedData, 10, true);\n\n      console.log(chunkedArr);\n\n      const labelsCopy = [];\n      const dataCopy = this.state.datasets;\n      dataCopy[0].data = [];\n\n      chunkedArr.map((item) => {\n        labelsCopy.push(\n          `${item[0].t.match(/^\\d{4}/)} - ${item[item.length - 1].t.match(\n            /^\\d{4}/,\n          )}`,\n        );\n        dataCopy[0].data.push(this.getAverageValue(item));\n      });\n\n      this.setState({\n        labels: labelsCopy,\n        datasets: dataCopy,\n      });\n    } else if (\n      this.state.startYear > this.state.endYear ||\n      this.state.startYear == this.state.endYear\n    ) {\n      alert('fix values');\n    }\n  }\n\n  render() {\n    if (this.state.years === null) {\n      return (\n        <div className=\"spinner\">\n          <Spin size=\"large\" />\n        </div>\n      );\n    } else\n      return (\n        <div>\n          <select\n            name=\"\"\n            id=\"start-year-temp\"\n            onChange={(value) => {\n              this.setStart(value);\n            }}\n            value={this.value}\n          >\n            {this.state.years.map((year, index) => {\n              return (\n                <option key={`year${index}`} value={year}>\n                  {year}\n                </option>\n              );\n            })}\n          </select>\n          <select\n            name=\"\"\n            id=\"end-year-temp\"\n            onChange={(value) => {\n              this.setEnd(value);\n            }}\n            value={this.value}\n          >\n            {this.state.years.reverse().map((year, index) => {\n              return (\n                <option key={`year${index}`} value={year}>\n                  {year}\n                </option>\n              );\n            })}\n          </select>\n          <Line\n            data={this.state}\n            options={{\n              title: {\n                display: true,\n                text: 'Average Precipitation',\n                fontSize: 20,\n              },\n              legend: {\n                display: true,\n                position: 'right',\n              },\n            }}\n          />\n        </div>\n      );\n  }\n}\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Button } from 'antd';\n\nimport Temp from './components/Temp';\nimport Prec from './components/Prec';\n\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayTemperature: true,\n      displayPrecipitation: false,\n    };\n  }\n\n  displayTemp() {\n    this.setState({\n      displayTemperature: true,\n      displayPrecipitation: false,\n    });\n  }\n\n  displayPrec() {\n    this.setState({\n      displayTemperature: false,\n      displayPrecipitation: true,\n    });\n  }\n\n  render() {\n    if (this.state.displayTemperature) {\n      return (\n        <div className=\"App\">\n          <Button\n            onClick={() => {\n              this.displayTemp();\n            }}\n          >\n            Temperature\n          </Button>\n          <Button\n            onClick={() => {\n              this.displayPrec();\n            }}\n          >\n            Precipitation\n          </Button>\n          <Temp className=\"App__temp\" />\n        </div>\n      );\n    } else\n      return (\n        <div className=\"App\">\n          <Button\n            onClick={() => {\n              this.displayTemp();\n            }}\n          >\n            Temperature\n          </Button>{' '}\n          <Button\n            onClick={() => {\n              this.displayPrec();\n            }}\n          >\n            Precipitation\n          </Button>{' '}\n          <Prec className=\"App__prec\" />\n        </div>\n      );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}